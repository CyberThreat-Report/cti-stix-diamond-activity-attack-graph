"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMalwareAnalysisView = exports.MALWARE_ANALYSIS_TYPE = void 0;
var basic_1 = require("../basic");
exports.MALWARE_ANALYSIS_TYPE = "malware-analysis";
function getMalwareAnalysisView(titleId, contentId, typeId, malwareAnalysisSDO) {
    document.getElementById(titleId).innerHTML += malwareAnalysisSDO.product;
    document.getElementById(typeId).innerHTML += "Malware Analysis";
    var el = document.getElementById(contentId);
    var malwareAnalysisDIV = document.createElement("div");
    malwareAnalysisDIV.id = exports.MALWARE_ANALYSIS_TYPE;
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.version)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Version:", malwareAnalysisSDO.version);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.configuration_version)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Configuration version:", malwareAnalysisSDO.configuration_version);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.modules)
        basic_1.addNodeViewTitleAndTextList(malwareAnalysisDIV, "Modules:", malwareAnalysisSDO.modules, "badge-dark");
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.analysis_engine_version)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Analysis engine version:", malwareAnalysisSDO.analysis_engine_version);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.analysis_definition_version)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Analysis definition version:", malwareAnalysisSDO.analysis_definition_version);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.submitted)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Submitted:", new Date(malwareAnalysisSDO.submitted).toString());
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.analysis_started)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Analysis started:", new Date(malwareAnalysisSDO.analysis_started).toString());
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.analysis_ended)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Analysis ended:", new Date(malwareAnalysisSDO.analysis_ended).toString());
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.result_name)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Result name:", malwareAnalysisSDO.result_name);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.result)
        basic_1.addNodeViewTitleAndText(malwareAnalysisDIV, "Result:", malwareAnalysisSDO.result);
    el.appendChild(malwareAnalysisDIV);
    basic_1.customFieldView(malwareAnalysisDIV.id, malwareAnalysisSDO);
    if (malwareAnalysisSDO === null || malwareAnalysisSDO === void 0 ? void 0 : malwareAnalysisSDO.external_references) {
        basic_1.externalReferencesView(malwareAnalysisDIV.id, malwareAnalysisSDO.external_references);
    }
}
exports.getMalwareAnalysisView = getMalwareAnalysisView;
