import {
  addKillChainPhases,
  addNodeViewTitleAndText,
  addNodeViewTitleAndTextList,customFieldView, externalReferencesView
} from "../basic.js";

export const MALWARE_TYPE = "malware"

export function getMalwareView(titleId, contentId, typeId, malwareSDO) {
  document.getElementById(titleId).innerHTML += malwareSDO.name;
  document.getElementById(typeId).innerHTML += "Malware";

  let el = document.getElementById(contentId);
  const malwareDIV = document.createElement("div");
  malwareDIV.id = "malware";

  if (malwareSDO?.description) addNodeViewTitleAndText(malwareDIV, "Description:", malwareSDO.description);
  if (malwareSDO?.aliases) addNodeViewTitleAndTextList(malwareDIV, "Aliases:", malwareSDO.aliases, "badge-dark");
  if (malwareSDO?.malware_types) addNodeViewTitleAndTextList(malwareDIV, "Malware types:", malwareSDO.malware_types,
    "badge-dark");
  if (malwareSDO?.is_family) addNodeViewTitleAndText(malwareDIV, "Is malware family:",
    malwareSDO.is_family === true ? "Yes": "No");
  if (malwareSDO?.first_seen) addNodeViewTitleAndText(malwareDIV, "First seen:",
    new Date(malwareSDO.first_seen).toUTCString());
  if (malwareSDO?.last_seen) addNodeViewTitleAndText(malwareDIV, "Last seen:",
    new Date(malwareSDO.last_seen).toUTCString());
  if (malwareSDO?.architecture_execution_envs) addNodeViewTitleAndTextList(malwareDIV,
    "Architecture execution envs:", malwareSDO.architecture_execution_envs,"badge-dark");
  if (malwareSDO?.implementation_languages) addNodeViewTitleAndTextList(malwareDIV,
    "Implementation Languages:", malwareSDO.implementation_languages,"badge-dark");
  if (malwareSDO?.capabilities) addNodeViewTitleAndTextList(malwareDIV,
    "Capabilities:", malwareSDO.capabilities,"badge-dark");
  if (malwareSDO?.kill_chain_phases) addKillChainPhases(malwareDIV, malwareSDO.kill_chain_phases)

  el.appendChild(malwareDIV);
  customFieldView(malwareDIV.id, malwareSDO);
  if (malwareSDO?.external_references) {
    externalReferencesView(malwareDIV.id, malwareSDO.external_references);
  }
}
